<header class="site-headerOZ" role="banner">
  {% include 'header-svg' %}
  <div class="text-card-wrapper">
    <div class="heading-wrapper">
      <h1 class="heading-container">Create <span class="bold">jumbo</span> custom cards that <span class="bold">stick</span> to any surface.</h1>
      <h2 class="subheading-container">Consectetur Adipiscing dolor sit amet, consectetur adipiscing elit. Dras vestibulum ante vitae accumsan malesuada.</h2>
    </div>
   
    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 472.226 557.605"><defs><style>.a,.d{fill:#01acda;}.b{fill:#fff;}.c,.d{stroke:none;}.e{filter:url(#c);}.f{filter:url(#a);}</style><filter id="a" x="51" y="0" width="278.094" height="85.762" filterUnits="userSpaceOnUse"><feOffset dy="3" input="SourceAlpha"/><feGaussianBlur stdDeviation="3" result="b"/><feFlood flood-opacity="0.161"/><feComposite operator="in" in2="b"/><feComposite in="SourceGraphic"/></filter><filter id="c" x="0" y="16.762" width="472.226" height="540.843" filterUnits="userSpaceOnUse"><feOffset dy="3" input="SourceAlpha"/><feGaussianBlur stdDeviation="20" result="d"/><feFlood flood-opacity="0.161"/><feComposite operator="in" in2="d"/><feComposite in="SourceGraphic"/></filter></defs><g transform="translate(-644 -113.667)"><g class="f" transform="matrix(1, 0, 0, 1, 644, 113.67)"><path class="a" d="M704,276.429l260.094-67.762v67.762Z" transform="translate(-644 -202.67)"/></g><g transform="translate(0 -25)"><g class="e" transform="matrix(1, 0, 0, 1, 644, 138.67)"><g class="b" transform="translate(60 73.76)"><path class="c" d="M 347.2257690429688 415.8427734375 L 4.999980449676514 415.8427734375 L 4.999980449676514 4.999982357025146 L 347.2257690429688 4.999982357025146 L 347.2257690429688 415.8427734375 Z"/><path class="d" d="M 10 10 L 10 410.8427429199219 L 342.2257385253906 410.8427429199219 L 342.2257385253906 10 L 10 10 M 0 0 L 352.2257385253906 0 L 352.2257385253906 420.8427429199219 L 0 420.8427429199219 L 0 0 Z"/></g></g></g></g></svg>

  </div>
  <div class="button-wrapper">
    <a href="/collections/all"><button>shop Now</button></a>
  </div>

</header>


<!-- /templates/index.liquid -->
{% comment %}

  This is the homepage of your site.

  More info on global variables (available on all templates):
    - http://docs.shopify.com/themes/liquid-variables/global
{% endcomment %}
<section id="#categories" style="position: relative;">
<svg class="category-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 643 643">
  <defs>
    <style>
      .cls-1 {
        fill: url(#linear-gradient2);
      }
    </style>
    <linearGradient id="linear-gradient2" x1="0.451" y1="0.327" x2="0.703" y2="0.927" gradientUnits="objectBoundingBox">
      <stop offset="0" stop-color="#bcd631"/>
      <stop offset="1" stop-color="#e3f96d"/>
    </linearGradient>
  </defs>
  <circle id="Pink_Circle_Left" data-name="Pink Circle Left" class="cls-1" cx="321.5" cy="321.5" r="321.5"/>
</svg>
  <h2 style="text-align: center; color: #01ACDA;">Feel free to browse! Here are our categories.</h2>
{% comment %}
  Use class grid-uniform to have evenly sized columns clear
  each other properly at each breakpoint.
{% endcomment %}
<div class="category-grid">

  {% comment %}
    Loop through products in your Frontpage collection.
    This collection is created by default, but you must add products to it.
  {% endcomment %}
  {% for collection in collections %}

    {% comment %}
      Change the grid item width by using classes from the grid in
      the grid_item_width variable.

      Example:
        - {% assign grid_item_width = 'large--one-third medium--one-half' %}
    {% endcomment %}
    {% include 'category-product-grid-item' %}

  {% endfor %}
</div>
</section>
<!-- /templates/index.liquid -->
{% comment %}

  This is the homepage of your site.

  More info on global variables (available on all templates):
    - http://docs.shopify.com/themes/liquid-variables/global
{% endcomment %}
<section id="#instructions" style="position: relative;">
<svg class="simple-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 643 643">
  <defs>
    <style>
      .cls-1 {
        fill: url(#linear-gradient2);
      }
    </style>
    <linearGradient id="linear-gradient2" x1="0.451" y1="0.327" x2="0.703" y2="0.927" gradientUnits="objectBoundingBox">
      <stop offset="0" stop-color="#bcd631"/>
      <stop offset="1" stop-color="#e3f96d"/>
    </linearGradient>
  </defs>
  <circle id="Pink_Circle_Left" data-name="Pink Circle Left" class="cls-1" cx="321.5" cy="321.5" r="321.5"/>
</svg>
{% comment %}
  Use class grid-uniform to have evenly sized columns clear
  each other properly at each breakpoint.
{% endcomment %}
<div class="simple-instruction">
  <h2 style="text-align: center; color: #01ACDA;">It's really this simple. </h2>
  <svg class="instruction-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 228 228">
  <defs>
    <style>
      .cls-1 {
        fill: url(#linear-gradient);
      }
    </style>
    <linearGradient id="linear-gradient" x1="0.18" x2="0.204" y2="1.113" gradientUnits="objectBoundingBox">
      <stop offset="0" stop-color="#f4df62"/>
      <stop offset="1" stop-color="#ffbd14"/>
    </linearGradient>
  </defs>
  <circle id="Yellow_Circle_Left" data-name="Yellow Circle Left" class="cls-1" cx="114" cy="114" r="114"/>
</svg>

</div>
</section>

<hr>

{% comment %}
  Loop through three recent blog articles with the following code.

  Since we're not on the blog template, we need to define the blog
  handle we want to focus on. For this example we'll use the default 'news',
  but you can create a blog page-specific content if you want.
{% endcomment %}
<h2>{{ 'homepage.sections.news_title' | t }}</h2>

<div class="grid">
  {% for article in blogs['news'].articles limit:3 %}

    <div class="grid__item large--one-third">

      <time datetime="{{ article.published_at | date: '%Y-%m-%d' }}">{{ article.published_at | date: format: 'month_day_year' }}</time>
      <h3><a href="{{ article.url }}">{{ article.title }}</a></h3>

      {% comment %}
        Add a surrounding div with class 'rte' to anything that will come from the rich text editor.
        Since this is just a listing page, you can either use the excerpt or truncate the full article.
      {% endcomment %}
      <div class="rte">
        {% if article.excerpt.size > 0 %}
          {{ article.excerpt }}
        {% else %}
          <p>{{ article.content | strip_html | truncatewords: 20 }}</p>
        {% endif %}
      </div>

      {% comment %}
        Show off meta information like number of comments and tags.
      {% endcomment %}
      <ul>
        {% if blog.comments_enabled? %}
        <li>
          <a href="{{ article.url }}#comments">
            {{ article.comments_count }}
            {{ 'blogs.comments.with_count' | t: count: article.comments_count }}
          </a>
        </li>
        {% endif %}
      </ul>

      <p><a href="{{ article.url }}">{{ 'blogs.article.read_more' | t }} &rarr;</a></p>

    </div>

  {% endfor %}
</div>
